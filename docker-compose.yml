version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: portal_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-portal}
      MYSQL_USER: ${DB_USER:-jitdhana}
      MYSQL_PASSWORD: ${DB_PASSWORD:-iT12345$}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - portal_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portal_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3105
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-portal}
      DB_USER: ${DB_USER:-jitdhana}
      DB_PASSWORD: ${DB_PASSWORD:-iT12345$}
      DB_DIALECT: mysql
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      JWT_EXPIRE: 7d
      CORS_ORIGIN: http://192.168.0.96:3015
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3105:3105"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - portal_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3105/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: portal_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://192.168.0.96:3105
    ports:
      - "3015:3015"
    depends_on:
      - backend
    networks:
      - portal_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3015"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: portal_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - portal_network

volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  portal_network:
    driver: bridge
